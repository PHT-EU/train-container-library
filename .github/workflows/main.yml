# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: main-ci

on:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]


jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FHIR_SERVER_URL: ${{ secrets.FHIR_SERVER_URL }}
      FHIR_USER: ${{ secrets.FHIR_USER }}
      FHIR_PW: ${{ secrets.FHIR_PW }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with=dev

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  build:

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: protocol

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build protocol image
        run: docker build . --file ./docker/Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      

      - name: Scan image
        uses: Azure/container-scan@v0
        with:
          image-name: ${{ env.IMAGE_NAME }}

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "dev" ] && VERSION=dev
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION